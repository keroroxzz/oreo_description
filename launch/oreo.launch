<launch>
  <arg name="x_pos" default="0"/>
  <arg name="y_pos" default="0"/>
  <arg name="z_pos" default="0.2"/> 
  <arg name="yaw_pos" default="0.0"/>  
  <arg name="with_map" default="true"/>
  <arg name="map" default="younglin.world"/>
  <arg name="pub_state" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="depth_point_cloud" default="true"/>
  <arg name="kinova" default="false"/>
  <arg name="kinova_robotType" default="j2n6s300"/>
  <arg name="kinova_robotName" default="$(arg kinova_robotType)"/>
  
  <group if="$(arg with_map)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find my_simulation)/worlds/$(arg map)"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
      <arg name="verbose" value="false"/>
    </include>
  </group>

  <group if="$(eval arg('kinova') == false)">
    <include file="$(find oreo_description)/launch/oreo_vanilla.launch">
      <arg name="x_pos" value="$(arg x_pos)"/>
      <arg name="y_pos" value="$(arg y_pos)"/>
      <arg name="z_pos" value="$(arg z_pos)"/> 
      <arg name="yaw_pos" value="$(arg yaw_pos)"/>  
    </include>
  </group>
  <group if="$(eval arg('kinova') == true)">
    <include file="$(find oreo_description)/launch/oreo_kinova.launch">
      <arg name="x_pos" value="$(arg x_pos)"/>
      <arg name="y_pos" value="$(arg y_pos)"/>
      <arg name="z_pos" value="$(arg z_pos)"/> 
      <arg name="yaw_pos" value="$(arg yaw_pos)"/>  
      <arg name="kinova_robotType" value="$(arg kinova_robotType)"/>  
      <arg name="kinova_robotName" value="$(arg kinova_robotName)"/>  
    </include>
  </group>

  <rosparam command="load" file="$(find oreo_description)/config/oreo_motor_controllers.yaml"/>
  <node pkg="controller_manager"
    type="spawner"
    name="controller"
    respawn="false"
    output="screen"
    ns="/oreo"
    args="--namespace=/oreo r l b"/>

  <group if="$(eval arg('pub_state') == true)">
    <node 
      pkg="robot_state_publisher" 
      type="robot_state_publisher" 
      name="rob_state_pub" >
    </node>
    <node pkg="tf" type="static_transform_publisher" name="base_footprint_tf" args="0 0 0 0 0 0 base_link base_footprint 100" />
  </group>

  <group if="$(eval arg('depth_point_cloud') == true)">
    <node pkg="nodelet" type="nodelet" args="manager"
              name="nodelet_manager" output="screen"/>

    <node pkg="nodelet" type="nodelet" name="cloudify"
            args="load depth_image_proc/point_cloud_xyz nodelet_manager">
        <remap from="image_rect" to="/camera/depth/image_raw"/>
        <remap from="points" to="/camera/depth_registered/points"/>
        <remap from="camera_info" to="/camera/depth/camera_info"/>
    </node>
  </group>

</launch>
